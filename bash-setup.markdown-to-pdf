#!/bin/bash
#      -V mainfont="LatinModernRoman" \
#      -V monofont="LatinModernMono" \
function md-to-pdf() {
  echo $HEADER
  INPUT_FILENAME=$1
  if [ -z $INPUT_FILENAME ]
  then
    echo "You must provide an input filename and an output filename.  Usage:"
    echo "md-to-pdf INPUT_FILENAME TITLE OUTPUT_DIR"
  else 
    TITLE=${2:-Title Not Set}
    OUTPUT_DIR=${4:-$(pwd)}
    OUTPUT_FORMAT=${3:-pdf}
    OUTPUT_FILENAME=$INPUT_FILENAME.$OUTPUT_FORMAT
    echo "md-to-pdf: \
      INPUT_FILENAME: $INPUT_FILENAME\
      OUTPUT_DIR: $OUTPUT_DIR\
      TITLE: $TITLE\
      OUTPUT_FORMAT: $OUTPUT_FORMAT\
      Output: $OUTPUT_FILENAME.$OUTPUT_FORMAT
      "
    docker run --rm -v $OUTPUT_DIR:/data \
      -u $(id -u):$(id -g) mypandoc:latest \
      --lua-filter /filters/lua-filters/filters/diagram-generator.lua \
      --from=markdown --toc -V title:$TITLE \
      --pdf-engine=lualatex \
      -V geometry:margin=0.75in $INPUT_FILENAME \
      -o $OUTPUT_FILENAME
  fi
}

function md-to-pdf-recursive() {
  local WORKDIR=${1:-$PWD}
  echo "WORKDIR: $WORKDIR"
  local temp_readme_file="temp_readme_file.txt"
  echo "" > $temp_readme_file
  for mdfile in $WORKDIR/**/*.md; do
    # check for gitignore if applicable
    if [[ -d $WORKDIR/.git ]]; then
      git check-ignore --quiet $mdfile
      local exitstatus=$?
      if [ $exitstatus -ne 0 ]; then
        msg_ok "ADDING" "$mdfile"
        echo '\n\\newpage\n' >> $temp_readme_file
        cat $mdfile >> $temp_readme_file
      else
        msg_info "SKIP" "$mdfile"
      fi
    else
      msg_ok "ADDING" "$mdfile"
      echo '\n\\newpage\n' >> $temp_readme_file
      cat $mdfile >> $temp_readme_file
    fi
  done
  cat $temp_readme_file
  mv $temp_readme_file $temp_readme_file.md
  md-to-pdf $temp_readme_file.md
  rm $temp_readme_file.md
}

function md-to-pdf-test() {
  INPUT_FILENAME=$1
  if [ -z $INPUT_FILENAME ]
  then
    echo "You must provide an input filename and an output filename.  Usage:"
    echo "md-to-pdf INPUT_FILENAME TITLE OUTPUT_DIR"
  else 
    TITLE=${2:-Title Not Set}
    OUTPUT_DIR=${4:-$(pwd)}
    OUTPUT_FORMAT=${3:-pdf}
    OUTPUT_FILENAME=$INPUT_FILENAME.$OUTPUT_FORMAT
    echo "md-to-pdf: \
      INPUT_FILENAME: $INPUT_FILENAME\
      OUTPUT_DIR: $OUTPUT_DIR\
      TITLE: $TITLE\
      OUTPUT_FORMAT: $OUTPUT_FORMAT\
      Output: $OUTPUT_FILENAME.$OUTPUT_FORMAT
      "
    docker run --rm -v $OUTPUT_DIR:/data \
      -u $(id -u):$(id -g) mypandoc:latest \
      -s $INPUT_FILENAME \
      -o $OUTPUT_FILENAME.$OUTPUT_FORMAT \
      --verbose
  fi
}
